<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tcpConnect.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAMgCAYAAADbcAZoAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT8TLyRiYQpRiy1UELRREUuJYhAUJEYwauHuxsRAdg27ERtLwTZg4dF4FTbW2lrYCoLgAWJtYaVo
        I7L+sxEShAgODPPxZt5j5g0EDrKm5VYPg2XnnVg0os0m5rS6Z2ppI0gv3brp5ianx+JUHB+3VKn1pldl
        8b/RmFxyTajShIfNnJMXXhQeXMvnFO8Ih81lPSl8KtzjyAWF75VuFPlFcdrngMoMO/HYiHBYWEuXsVHG
        5rJjCQ8IdyQtW/IDs0VOKl5XbGVXzZ97qheGluyZaaXLbCfKOJNMoWGwSoYseekrgy2KS0z2IxX8rb5/
        SlyGuDKY4hhlBQvd96P+4He3bqq/r5gUikDNk+e9dULdFnwVPO/z0PO+jiD4CBd2yb9yAEPvohdKWsc+
        NG3A2WVJM7bhfBNaHnK6o/tSUGYglYLXE/mmBDRfQ8N8sbeffY7vIC5dTVzB7h50pSV7ocK768t7+/OM
        3x+Rb+6GctiqRsHdAAAACXBIWXMAABJxAAAScQHz3HqOAAAAB3RJTUUH6AYbAzAyK0zPWwAAABl0RVh0
        Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUFeBDhcAABS3SURBVHhe7dXbkuvEEkVR/v+nzyEDihBitW8t
        S6qsMSLmK/R2Laf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYwf8kqVkAwMXSD7Qk
        rRQAcLD0gytJehwA8IL0IypJOiYAWF76gZQknRMAtJd+ADsHzC99tzsGAK2kH7sjOlr6fxwRMJf0PT6i
        o6X/xxEBwJTSj9on3UX62z4JuKf0ff2kO0h/16cBwK2lH693mkn6+98NuFb6Xr7bLNLf/m4AcBvph+rV
        ukj/tlcDzpW+h6/WRfq3vRoAXCb9MD1rFenf/izgu9L37lmrSP/2ZwHAadIP0aNWlz6TRwHHSt+zZ60q
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABT++OP/wNv+gAz
        JzPm+QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAMgCAYAAADbcAZoAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT8TLyRiYQpRiy1UELRREUuJYhAUJEYwauHuxsRAdg27ERtLwTZg4dF4FTbW2lrYCoLgAWJtYaVo
        I7L+sxEShAgODPPxZt5j5g0EDrKm5VYPg2XnnVg0os0m5rS6Z2ppI0gv3brp5ianx+JUHB+3VKn1pldl
        8b/RmFxyTajShIfNnJMXXhQeXMvnFO8Ih81lPSl8KtzjyAWF75VuFPlFcdrngMoMO/HYiHBYWEuXsVHG
        5rJjCQ8IdyQtW/IDs0VOKl5XbGVXzZ97qheGluyZaaXLbCfKOJNMoWGwSoYseekrgy2KS0z2IxX8rb5/
        SlyGuDKY4hhlBQvd96P+4He3bqq/r5gUikDNk+e9dULdFnwVPO/z0PO+jiD4CBd2yb9yAEPvohdKWsc+
        NG3A2WVJM7bhfBNaHnK6o/tSUGYglYLXE/mmBDRfQ8N8sbeffY7vIC5dTVzB7h50pSV7ocK768t7+/OM
        3x+Rb+6GctiqRsHdAAAACXBIWXMAABJxAAAScQHz3HqOAAAAB3RJTUUH6AYbAzAyK0zPWwAAABl0RVh0
        Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUFeBDhcAABS4SURBVHhe7dXbkuvEEkVR/v+nzyEDihBitW8t
        S6qsMSLmK/R2Laf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFr4nyRNGgAwifRDLkmdAgBO
        lH6MJUkAwMvSD6kk6XcBwPLSD6Qk6fsBwDLSD+GMAX2k7/gRHS39P44IAFpJP3YdA+aSvsefdrX0N30a
        AEwp/agd1ZHSf/+IgHtK39d3m0X6298NAG4t/Xh92tXS3/RpwPXSd/PVukj/tlcDgFtJP1bvNIv0t78b
        cK70PXzWKtK//VkAcJn0w/RqXaR/26sB35W+d89aWfo8HgUAp0k/RK/UXfo3vxJwrPQ9exT/lj6jRwHA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7uyPP/4P6PEA
        Mxd7JsQAAAAASUVORK5CYII=
</value>
  </data>
</root>